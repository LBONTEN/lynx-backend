version: "3.7"

x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:

  # TODO: move into proper image

  database:
    image: semtech/mu-authorization:0.6.0-beta.5
    environment:
      MU_SPARQL_ENDPOINT: "http://triplestore:8890/sparql"
      ERROR_ON_UNWRITTEN_DATA: "on"
    volumes:
      - ./config/authorization:/config
    labels:
      - logging=true

  dispatcher:
    image: semtech/mu-dispatcher:2.1.0-beta.2
    volumes:
      - ./config/dispatcher:/config
    labels:
      - logging=true

  # module for sending delta messages
  # currently used by:
  #   - tika-text-extractor, for saving text when a file is
  deltanotifier:
    image: semtech/mu-delta-notifier
    volumes:
      - ./config/delta:/config
    labels:
      - logging=true

  elasticsearch:
    image: semtech/mu-search-elastic-backend:1.1.0
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node

  file:
    image: semtech/mu-file-service:3.3.0
    links:
      - database:database
    volumes:
      - files:/share
    labels:
      - logging=true

  identifier:
    image: semtech/mu-identifier:1.10.0
    ports:
      - "8000:80"
    environment:
      DEFAULT_MU_AUTH_ALLOWED_GROUPS_HEADER: '[{"variables":[],"name":"public"}]'
      DEFAULT_ACCESS_CONTROL_ALLOW_ORIGIN_HEADER: "*"
    labels:
      - logging=true

  migrations:
    image: semtech/mu-migrations-service:0.8.0
    links:
      - triplestore:database
    volumes:
      - ./config/migrations:/data/migrations
    labels:
      - logging=true

  # Sure hope I need all these
  models-init:
    image: google/cloud-sdk:alpine
    command:
      - "gsutil"
      - "-m"
      - "cp"
      - "-r"
      - "gs://abb-textgen-models/topic.model"
      - "gs://abb-textgen-models/RobertaModel_PDF_V1"
      - "gs://abb-textgen-models/NER-model"
      - "gs://abb-textgen-models/zero-shot-model"
      - "gs://abb-textgen-models/translate-nl-en"
      - "gs://abb-textgen-models/dutch-gpt-medium"
      - "gs://abb-textgen-models/dutch-gpt-neo"
      - "gs://abb-textgen-models/gpt2-retrain"
      - "/models/"
    volumes:
      - modelstore:/models

  poc-ai-embed:
    image: lblod/poc-ai-embed:latest
    pull_policy: always
    volumes:
      - modelstore:/models
    container_name: lblod-embed-api
    depends_on:
      - models-init
    restart: unless-stopped
    ports:
      - 8081:8080

  resources:
    image: semtech/mu-cl-resources:latest
    volumes:
      - ./config/resources:/config
    labels:
      - logging=true

  search:
    image: semtech/mu-search:feature-dense-vector
    links:
      - database:database
    volumes:
      - ./config/search:/config
      - files:/data
      - search-cache:/cache

  swagger-ui:
    image: swaggerapi/swagger-ui
    container_name: "swagger-ui"
    ports:
      - "8080:8080"
    volumes:
      - ./swagger.json:/config/swagger.json
    environment:
      SWAGGER_JSON: /config/swagger.json
      BASE_URL: "/docs"

  # TODO: make it so we dont need this anymore
  tika:
    image: apache/tika:1.25-full

  tika-text-extractor:
    build: ./backend/tika-text-extractor
    links:
      - triplestore:database
    environment:
      MU_SPARQL_ENDPOINT: "http://triplestore:8890/sparql"
      LOG_LEVEL: "debug"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
      FILE_LOCATION: "/share/"
    volumes:
      - ./backend/tika-text-extractor/:/app
      - ./config/tika-text-extractor/:/config
      - files:/share
    labels:
      - logging=true

  triplestore:
    image: redpencil/virtuoso:1.0.0
    environment:
      SPARQL_UPDATE: "true"
      DEFAULT_GRAPH: "http://mu.semte.ch/application"
    ports:
      - "8890:8890"
    volumes:
      - virtuoso:/data
    labels:
      - logging=true

volumes:
  virtuoso:
  elasticsearch-data:
  modelstore:
  files:
  search-cache:
